{"mappings":"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","sources":["src/index.js"],"sourcesContent":["const refs = {\n  gameMenuBtn: document.querySelector(\".game-menu__btn\"),\n  cardGallery: document.querySelector('.card-gallery'),\n  timer: document.querySelector(\".timer\"),\n  score: document.querySelector(\".score\"),\n  statsModal: document.querySelector(\".stats-modal\"),\n  statsContainer: document.querySelector(\".stats__container\"),\n  statsTitle: document.querySelector(\".stats__title\"),\n  closeStatsModalBtn: document.querySelector(\".stats__modal-close\"),\n  clearStatHistoryBtn: document.querySelector(\".btn__clear-stats-memory\"),\n  resetBtn: document.querySelector(\".reset__button\"),\n  pauseBtn: document.querySelector(\".pause__button\"),\n  startBtn: document.querySelector(\".start__button\"),\n  stopBtn: document.querySelector(\".stop__button\"),\n  hintBtn: document.querySelector(\".hint__button\"),\n  styleContainer: document.querySelector(\".style__list-container\"),\n  styleList: document.querySelectorAll(\".style__list-item\"),\n  difficultyContainer: document.querySelector(\".difficulty__list-container\"),\n  difficultyList: document.querySelectorAll(\".difficulty__list-item\"),\n  playBtn: document.querySelector(\".play__button\"),\n  continueBtn: document.querySelector(\".continue__button\"),\n  cardLoadingAnimation: document.querySelector(\".card__loading-animation\"),\n  modal: document.querySelector(\".login-modal__container\"),\n  loginBtn: document.querySelector(\".open__login-modal\"),\n  submitBtn: document.querySelector(\".submit__btn\"),\n  closeModalBtn: document.querySelector(\".login__modal-close\"),\n  loginForm: document.querySelector(\".login__form\"),\n  cardFlipSound: document.querySelector(\".card-flip-sound\"),\n  cardMatchSound: document.querySelector(\".card-match-sound\"),\n  buttonClickSound: document.querySelector(\".button-click-sound\"),\n};\nlet NUMBER_OF_CARDS = null;\nlet CHOSEN_STYLE = null;\nlet HALF_SELECTED_CARD_COUNT = null;\nlet CLASSIC_CARDS_BASE_URL = `https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1`;\nlet MARVEL_API_KEY = `ts=1&apikey=d8596d8ee4bccb85f124f5d8d10d70c6&hash=0f06deeb86b37aee2ba98815568fbf68`;\nlet MARVEL_RANDOM_OFFSET = null;\nlet MARVEL_CARDS_BASE_URL = `https://gateway.marvel.com/v1/public/characters?limit=100`;\nlet POKEMON_CARDS_BASE_URL = `https://pokeapi.co/api/v2/pokemon/?limit=52&`;\nlet POKEMON_RANDOM_OFFSET = null;\nlet clickedCards = [];\nlet matchedCards = [];\nlet startTime;\nlet timerInterval;\nlet elapsedTime = 0;\nlet isPaused = false;\nlet zIndex = 1;\nlet firstMatchTime = null;\nlet totalGameTime = null;\nlet lastUsername = `Guest ${getRandomNum()}, login to save your stats!`;\nlet difficulty = null;\nlet score = 0;\nlet userStats = [];\nrefs.playBtn.disabled = true;\nrefs.continueBtn.disabled = true;\n\nasync function getCards() {\n  refs.cardGallery.innerHTML = '';\n  refs.timer.innerHTML = '00:00';\n  refs.score.innerHTML = '0';\n  refs.statsModal.style.display = 'none';\n  refs.playBtn.disabled = true;\n  refs.continueBtn.disabled = false;\n  refs.difficultyList.forEach(difficulty => difficulty.classList.add('disabled'));\n  refs.styleList.forEach(style => style.classList.add('disabled'));\n  refs.cardLoadingAnimation.style.display = 'inline-block';\n  refs.startBtn.disabled = true;\n  try {\n    if (CHOSEN_STYLE === 'classic') {\n      const classicCardsFetch = await fetch(`${CLASSIC_CARDS_BASE_URL}`);\n      const classicCardsDeck = await classicCardsFetch.json();\n      const classicCardsDraw = await fetch(`https://deckofcardsapi.com/api/deck/${classicCardsDeck.deck_id}/draw/?count=52`);\n      const classicCards = await classicCardsDraw.json();\n      shuffleDrawCards(classicCards.cards, HALF_SELECTED_CARD_COUNT);\n    } else if (CHOSEN_STYLE === 'marvel') {\n      const marvelCardsFetch = await fetch(`${MARVEL_CARDS_BASE_URL}&offset=${MARVEL_RANDOM_OFFSET}&${MARVEL_API_KEY}`);\n      const marvelCards = await marvelCardsFetch.json();\n      shuffleDrawCards(marvelCards.data.results, HALF_SELECTED_CARD_COUNT);\n    } else if (CHOSEN_STYLE === 'pokemon') {\n      const pokemonCardsFetch = await fetch(`${POKEMON_CARDS_BASE_URL}offset=${POKEMON_RANDOM_OFFSET}`);\n      const pokemonCards = await pokemonCardsFetch.json();\n      const pokemonCardData = pokemonCards.results\n      const pokemonCardImageData = await Promise.all(\n        pokemonCardData.map(async (pokemonCard) => {\n          const detailResponse = await fetch(pokemonCard.url);\n          return detailResponse.json();\n        })\n      );\n      shuffleDrawCards(pokemonCardImageData, HALF_SELECTED_CARD_COUNT);\n    };\n  } catch (error) {\n    console.log(error);\n  };\n};\n\nfunction shuffleDrawCards(data, numCards) {\n  if (CHOSEN_STYLE === 'marvel') {\n    const filteredCards = data.filter(marvelCard =>\n      !marvelCard.thumbnail.path.includes('image_not_available') &&\n      marvelCard.thumbnail.path !== '' &&\n      marvelCard.thumbnail.extension !== '' &&\n      marvelCard.thumbnail.extension !== 'gif'\n    );\n    const selectedMarvelCards = filteredCards.slice(0, numCards);\n    const duplicatedMarvelCards = selectedMarvelCards.map(card => ({ ...card }));\n    const drawnMarvelCards = selectedMarvelCards.concat(duplicatedMarvelCards);\n    for (let i = drawnMarvelCards.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [drawnMarvelCards[i], drawnMarvelCards[j]] = [drawnMarvelCards[j], drawnMarvelCards[i]];\n    }\n    renderCardmarkup(drawnMarvelCards);\n  } else if (CHOSEN_STYLE === 'classic') {\n    const selectedClassicCards = data.slice(0, numCards);\n    const duplicatedClassicCards = selectedClassicCards.map(card => ({ ...card }));\n    const drawnClassicCards = selectedClassicCards.concat(duplicatedClassicCards);\n    for (let i = drawnClassicCards.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [drawnClassicCards[i], drawnClassicCards[j]] = [drawnClassicCards[j], drawnClassicCards[i]];\n    }\n    renderCardmarkup(drawnClassicCards);\n  } else if (CHOSEN_STYLE === 'pokemon') {\n    const selectedPokemonCards = data.slice(0, numCards);\n    const duplicatedPokemonCards = selectedPokemonCards.map(card => ({ ...card }));\n    const drawnPokemonCards = selectedPokemonCards.concat(duplicatedPokemonCards);\n    for (let i = drawnPokemonCards.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [drawnPokemonCards[i], drawnPokemonCards[j]] = [drawnPokemonCards[j], drawnPokemonCards[i]];\n    }\n    renderCardmarkup(drawnPokemonCards);\n  };\n};\n\nfunction getRandomNum() {\n  if (CHOSEN_STYLE === 'marvel') {\n    MARVEL_RANDOM_OFFSET = Math.floor(Math.random() * 1500) + 1;\n  } else if (CHOSEN_STYLE === 'pokemon') {\n    POKEMON_RANDOM_OFFSET = Math.floor(Math.random() * 230) + 1;\n  } else {\n    return Math.floor(Math.random() * 10000) + 1;\n  };\n};\n\nfunction onPlayBtnClick() {\n  refs.buttonClickSound.play();\n  getRandomNum();\n  getCards();\n}\n\nfunction onStyleClick(e) {\n  CHOSEN_STYLE = e.target.closest('li').dataset.value;\n  const closestLi = e.target.closest('li');\n  if (!closestLi || closestLi.classList.contains('disabled')) {\n    return;\n  };\n  refs.buttonClickSound.play();\n  refs.styleList.forEach(item => item.classList.remove('chosen-style'));\n  e.target.closest('li').classList.add('chosen-style');\n\n  if (CHOSEN_STYLE === 'classic') {\n    document.body.classList.remove('pokemon');\n    document.body.classList.remove('marvel');\n    document.body.classList.add('classic');\n  } else if (CHOSEN_STYLE === 'marvel') {\n    document.body.classList.remove('pokemon');\n    document.body.classList.remove('classic');\n    document.body.classList.add('marvel');\n  } else if (CHOSEN_STYLE === 'pokemon') {\n    document.body.classList.remove('marvel');\n    document.body.classList.remove('classic');\n    document.body.classList.add('pokemon');\n  };\n  playBtnEnable();\n};\n\nfunction onDifficultyClick(e) {\n  if (e.target.nodeName !== 'LI' || e.target.classList.contains('disabled')) {\n    return;\n  };\n  refs.buttonClickSound.play();\n  refs.difficultyList.forEach(item => item.classList.remove('chosen-difficulty'));\n  NUMBER_OF_CARDS = Number(e.target.dataset.value);\n  HALF_SELECTED_CARD_COUNT = NUMBER_OF_CARDS / 2;\n  difficulty = e.target.textContent;\n  e.target.classList.add('chosen-difficulty');\n  playBtnEnable();\n};\n\nfunction renderCardmarkup(data) {\n  const cardGalleryMarkup = cardMarkup(data);\n  refs.cardGallery.insertAdjacentHTML('beforeend', cardGalleryMarkup);\n  refs.cardLoadingAnimation.style.display = 'none';\n  startTimer();\n};\n\nfunction cardMarkup(data) {\n  if (CHOSEN_STYLE === 'classic') {\n    return data.map(classicCard => {\n      return `\n      <li class=\"card__container\">\n        <div class=\"card\">\n          <div class=\"card__front card__front-classic\">\n          </div>\n          <div class=\"card__back\">\n          <img class=\"card__img\" src=\"${classicCard.image}\" alt=\"classic stlye playing card\" width=\"50\"/>\n          </div>\n        </div>\n      </li>`\n    }).join('')\n  } else if (CHOSEN_STYLE === 'marvel') {\n    return data.map(marvelCard => {\n      return `\n      <li class=\"card__container marvel-card__container\">\n        <div class=\"card card__marvel\">\n          <div class=\"card__front card__front-marvel\"> \n          </div>\n          <div class=\"card__back card__back-marvel\">\n            <img src=\"${marvelCard.thumbnail.path}.${marvelCard.thumbnail.extension}\" alt=\"${marvelCard.name}\" width=\"50\" class=\"card__img card__img-marvel\">\n          </div>\n        </div>\n      </li>\n    `;\n    }).join('');\n  } else if (CHOSEN_STYLE === 'pokemon') {\n    return data.map(pokemonCard => {\n      return `\n      <li class=\"card__container\">\n        <div class=\"card\">\n          <div class=\"card__front card__front-pokemon\"> \n          </div>\n          <div class=\"card__back\">\n              <img src=\"${pokemonCard.sprites.other.dream_world.front_default}\" class=\"card__img\" alt=\"${pokemonCard.name}\"/>\n          </div>\n        </div>\n      </li>\n    `;\n    }).join('');\n  };\n};\n\nfunction onCardClick(e) {\n  let cardClicked = e.target.parentNode.classList.contains('card');\n  let disabledCard = e.target.parentNode.classList.contains('disabled');\n  if (!cardClicked || disabledCard) {\n    return;\n  };\n  refs.cardFlipSound.play();\n  const img = e.target.parentElement.querySelector('.card__img');\n  const imgSrc = img.getAttribute('src');\n  const cardContainer = e.target.closest('.card');\n  cardContainer.style.transform = 'rotateY(.5turn)';\n  clickedCards.push(cardContainer);\n  if (clickedCards.length === 1) {\n    return\n  } else {\n    doCardsMatch(clickedCards[0], clickedCards[1])\n  };\n};\n\nfunction doCardsMatch(firstCard, secondCard) {\n  let firstCardImgSrc = firstCard.querySelector('.card__img').getAttribute('src');\n  let secondCardImgSrc = secondCard.querySelector('.card__img').getAttribute('src');\n  if (firstCardImgSrc !== secondCardImgSrc) {\n    scoreKeeper(score -= 1);\n    setTimeout(() => {\n      firstCard.style.transform = 'none';\n      secondCard.style.transform = 'none';\n    }, 1000);\n    clickedCards.length = 0;\n    return;\n  } else if (firstCardImgSrc === secondCardImgSrc) {\n    scoreKeeper(score += 1);\n    endOfGame();\n    matchedCardSplits();\n    matchedCards.push(firstCard, secondCard);\n    endOfGame();\n    clickedCards.length = 0;\n    setTimeout(() => {\n      matchedCardsAbsolutePosition(firstCard, secondCard);\n      stackedMatchedCards(firstCard, secondCard);\n      firstCard.classList.add('card__matched');\n      secondCard.classList.add('card__matched');\n      refs.cardMatchSound.play();\n    }, 1000);\n  };\n};\n\nfunction matchedCardsAbsolutePosition(firstCard, secondCard) {\n  const cardBottomDelta = 0;\n  const cardRightDelta = 0;\n\n  const firstCardRect = firstCard.getBoundingClientRect();\n  const secondCardRect = secondCard.getBoundingClientRect();\n\n  const firstCardAbsoluteBottom = window.innerHeight - (firstCardRect.top + firstCardRect.height) - cardBottomDelta;\n  const firstCardAbsoluteRight = window.innerWidth - (firstCardRect.left + firstCardRect.width) - cardRightDelta;\n  const secondCardAbsoluteBottom = window.innerHeight - (secondCardRect.top + secondCardRect.height) - cardBottomDelta;\n  const secondCardAbsoluteRight = window.innerWidth - (secondCardRect.left + secondCardRect.width) - cardRightDelta;\n\n  firstCard.style.position = 'absolute';\n  firstCard.style.bottom = firstCardAbsoluteBottom + 'px';\n  firstCard.style.right = firstCardAbsoluteRight + 'px';\n\n  secondCard.style.position = 'absolute';\n  secondCard.style.bottom = secondCardAbsoluteBottom + 'px';\n  secondCard.style.right = secondCardAbsoluteRight + 'px';\n};\n\nfunction stackedMatchedCards(firstCard, secondCard) {\n  firstCard.style.zIndex = `${zIndex++}`;\n  secondCard.style.zIndex = `${zIndex++}`;\n};\n\nfunction scoreKeeper(score) {\n  refs.score.textContent = score;\n};\n\nfunction onHintBtnClick(e) {\n  if (e.target.classList.contains('hint-btn')) {\n    return;\n  }\n  refs.buttonClickSound.play();\n  const cardList = document.querySelectorAll('.card');\n  cardList.forEach(card => card.style.transform = 'rotateY(.5turn)')\n\n  setTimeout(() => {\n    cardList.forEach(card => card.style.transform = 'none');\n  }, 500);\n};\n\nfunction playBtnEnable() {\n  if (CHOSEN_STYLE !== null && NUMBER_OF_CARDS !== null) {\n    refs.playBtn.disabled = false;\n  };\n}\n\nfunction submitForm(e) {\n  e.preventDefault();\n  refs.buttonClickSound.play();\n  refs.modal.style.display = \"none\";\n  const formData = new FormData(refs.loginForm);\n  const data = Object.fromEntries(formData);\n  const username = data.uname;\n  lastUsername = username;\n  refs.loginForm.reset();\n};\n\nfunction matchedCardSplits() {\n  const currentTime = new Date().getTime();\n  const timePassed = currentTime - startTime;\n  const timePassedInSeconds = timePassed / 1000;\n  if (firstMatchTime === null) {\n    firstMatchTime = timePassedInSeconds;\n  }\n  updateUserStats(lastUsername, difficulty, firstMatchTime, totalGameTime, score);\n};\n\nfunction endOfGame() {\n  if (matchedCards.length !== NUMBER_OF_CARDS) {\n    return;\n  } else {\n    updateUserStats(lastUsername, difficulty, firstMatchTime, totalGameTime, score);\n    stopGame();\n    renderStats();\n  };\n};\n\nfunction updateUserStats(lastUsername, difficulty, firstMatchTime, totalGameTime, score) {\n  const userStats = JSON.parse(localStorage.getItem(lastUsername)) || {};\n  if (!userStats[difficulty]) {\n    userStats[difficulty] = {\n      fastestTimeToMatch: firstMatchTime ? firstMatchTime.toFixed(2) : \"NO STATS\",\n      longestTimeToMatch: firstMatchTime ? firstMatchTime.toFixed(2) : \"NO STATS\",\n      fastestTotalGameTime: totalGameTime ? totalGameTime.toFixed(2) : \"NO STATS\",\n      longestTotalGameTime: totalGameTime ? totalGameTime.toFixed(2) : \"NO STATS\",\n      highestScore: score\n    };\n  } else {\n    if (firstMatchTime && (firstMatchTime < userStats[difficulty].fastestTimeToMatch || userStats[difficulty].fastestTimeToMatch === \"NO STATS\")) {\n      userStats[difficulty].fastestTimeToMatch = firstMatchTime.toFixed(2);\n    }\n    if (firstMatchTime && (firstMatchTime > userStats[difficulty].longestTimeToMatch || userStats[difficulty].longestTimeToMatch === \"NO STATS\")) {\n      userStats[difficulty].longestTimeToMatch = firstMatchTime.toFixed(2);\n    }\n    if (totalGameTime && (totalGameTime < userStats[difficulty].fastestTotalGameTime || userStats[difficulty].fastestTotalGameTime === \"NO STATS\")) {\n      userStats[difficulty].fastestTotalGameTime = totalGameTime.toFixed(2);\n    }\n    if (totalGameTime && (totalGameTime > userStats[difficulty].longestTotalGameTime || userStats[difficulty].longestTotalGameTime === \"NO STATS\")) {\n      userStats[difficulty].longestTotalGameTime = totalGameTime.toFixed(2);\n    }\n    if (score > userStats[difficulty].highestScore || userStats[difficulty].highestScore === null) {\n      userStats[difficulty].highestScore = score;\n    }\n  }\n  // Replace any null values with \"NO STATS\"\n  for (const [key, value] of Object.entries(userStats[difficulty])) {\n    if (value === null) {\n      userStats[difficulty][key] = \"NO STATS\";\n    }\n  }\n  localStorage.setItem(lastUsername, JSON.stringify(userStats));\n}\n\nfunction markupStats() {\n  const currentUserStats = JSON.parse(localStorage.getItem(lastUsername));\n  const markup = `\n    <div class=\"user-stats__list-container\">\n      <h4 class=\"user-stats__title\">${lastUsername}</h4>\n      <ul class=\"user-stats__list\">\n        <li class=\"user-stats__item\">Difficulty: ${difficulty}</li>\n        <li class=\"user-stats__item\">Fastest Time to Match: ${currentUserStats[difficulty].fastestTimeToMatch}</li>\n        <li class=\"user-stats__item\">Longest Time to Match: ${currentUserStats[difficulty].longestTimeToMatch}</li>\n        <li class=\"user-stats__item\">Fastest Total Game Time: ${currentUserStats[difficulty].fastestTotalGameTime}</li>\n        <li class=\"user-stats__item\">Longest Total Game Time: ${currentUserStats[difficulty].longestTotalGameTime}</li>\n        <li class=\"user-stats__item\">Highest Score: ${currentUserStats[difficulty].highestScore}</li>\n      </ul>\n    </div>\n  `;\n  return markup;\n};\n\nfunction renderStats() {\n  const markup = markupStats();\n  refs.statsContainer.innerHTML = markup;\n};\n\nfunction resetGame(e) {\n  if (!e.target.classList.contains('reset__button')) {\n    return;\n  }\n  refs.buttonClickSound.play();\n  stopGame();\n  getCards();\n};\n\nfunction pauseGame(e) {\n  if (e.target.classList.contains('pause__button') || !isPaused) {\n    refs.buttonClickSound.play();\n    refs.startBtn.disabled = false;\n    const cardList = document.querySelectorAll('.card');\n    clearInterval(timerInterval);\n    elapsedTime = Date.now() - startTime.getTime();\n    isPaused = true;\n    cardList.forEach(card => card.classList.add('disabled'));\n    refs.hintBtn.disabled = true;\n  } else if (!isPaused) {\n    const cardList = document.querySelectorAll('.card');\n    clearInterval(timerInterval);\n    elapsedTime = Date.now() - startTime.getTime();\n    isPaused = true;\n    cardList.forEach(card => card.classList.add('disabled'));\n    refs.hintBtn.disabled = true;\n  };\n};\n\nfunction startTimer() {\n  if (!isPaused) {\n    startTime = new Date();\n  } else {\n    startTime = new Date(Date.now() - elapsedTime);\n    isPaused = false;\n  }\n  timerInterval = setInterval(() => {\n    elapsedTime = Date.now() - startTime.getTime();\n    const minutes = Math.floor((elapsedTime / 1000 / 60) % 60);\n    const seconds = Math.floor((elapsedTime / 1000) % 60);\n    refs.timer.innerHTML = addLeaderingZero(minutes) + \":\" + addLeaderingZero(seconds);\n  }, 1000);\n};\n\nfunction continueGame(e) {\n  if (e.target.classList.contains('start__button')) {\n    refs.buttonClickSound.play();\n    const cardList = document.querySelectorAll('.card');\n    cardList.forEach(card => card.classList.remove('disabled'));\n    refs.hintBtn.disabled = false;\n    startTimer();\n    refs.startBtn.disabled = true;\n  };\n};\n\nfunction stopGame(e = null) {\n  if (e && !e.target.classList.contains('stop__button')) {\n    return;\n  } if (matchedCards.length === NUMBER_OF_CARDS) {\n    refs.buttonClickSound.play();\n    clearInterval(timerInterval);\n    let currentTime = new Date().getTime();\n    totalGameTime = ((currentTime - startTime) / 1000) % 60;\n    refs.difficultyList.forEach(difficulty => difficulty.classList.remove('disabled'));\n    refs.styleList.forEach(style => style.classList.remove('disabled'));\n    refs.difficultyList.forEach(difficulty => difficulty.classList.remove('chosen-difficulty'));\n    refs.styleList.forEach(style => style.classList.remove('chosen-style'));\n    refs.continueBtn.disabled = true;\n    matchedCards = [];\n    score = 0;\n    setTimeout(() => {\n      refs.statsModal.style.display = 'flex';\n    }, 1000);\n  };\n  if (matchedCards !== NUMBER_OF_CARDS) {\n    refs.buttonClickSound.play();\n    clearInterval(timerInterval);\n    let currentTime = new Date().getTime();\n    totalGameTime = ((currentTime - startTime) / 1000) % 60;\n    refs.difficultyList.forEach(difficulty => difficulty.classList.remove('disabled'));\n    refs.styleList.forEach(style => style.classList.remove('disabled'));\n    refs.difficultyList.forEach(difficulty => difficulty.classList.remove('chosen-difficulty'));\n    refs.styleList.forEach(style => style.classList.remove('chosen-style'));\n    refs.continueBtn.disabled = true;\n    matchedCards = [];\n    score = 0;\n  }\n};\n\nfunction addLeaderingZero(time) {\n  if (time < 10) {\n    return \"0\" + time;\n  } else {\n    return time;\n  };\n};\n\nfunction loginModalClick(e) {\n  if (e.target === refs.loginBtn) {\n    refs.buttonClickSound.play();\n    refs.modal.style.display = 'flex';\n  }\n};\n\nfunction closeModal(e) {\n  if (e.target === refs.closeModalBtn) {\n    refs.buttonClickSound.play();\n    refs.modal.style.display = 'none';\n  }\n};\n\nfunction modalOutsideClick(e) {\n  if (e.target == refs.modal) {\n    refs.modal.style.display = 'none';\n  }\n};\n\nfunction onGameMenuClick(e) {\n  if (e.target.closest('BUTTON')) {\n    refs.buttonClickSound.play();\n    if (!isPaused) {\n      pauseGame(e);\n    } else if (isPaused) {\n      isPaused = false;\n      pauseGame(e);\n    };\n  };\n};\n\nfunction closeStatsModal(e) {\n  if (e.target === refs.closeStatsModalBtn) {\n    refs.buttonClickSound.play();\n    refs.statsModal.style.display = 'none';\n  };\n};\n\nfunction clearStatsHistory(e) {\n  if (e.target === refs.clearStatHistoryBtn) {\n    refs.buttonClickSound.play();\n    localStorage.clear();\n    refs.statsContainer.innerHTML = '';\n    refs.statsTitle.innerHTML = 'All stats earased!'\n  };\n};\n\nrefs.cardGallery.addEventListener('click', onCardClick);\nrefs.resetBtn.addEventListener('click', resetGame);\nrefs.pauseBtn.addEventListener('click', pauseGame);\nrefs.startBtn.addEventListener('click', continueGame);\nrefs.stopBtn.addEventListener('click', stopGame);\nrefs.difficultyContainer.addEventListener('click', onDifficultyClick);\nrefs.styleContainer.addEventListener('click', onStyleClick);\nrefs.playBtn.addEventListener('click', onPlayBtnClick);\nwindow.addEventListener('click', modalOutsideClick);\nrefs.loginBtn.addEventListener('click', loginModalClick);\nrefs.closeModalBtn.addEventListener('click', closeModal);\nrefs.submitBtn.addEventListener(\"click\", submitForm);\nrefs.hintBtn.addEventListener('click', onHintBtnClick);\nrefs.gameMenuBtn.addEventListener('click', onGameMenuClick);\nrefs.closeStatsModalBtn.addEventListener('click', closeStatsModal);\nrefs.clearStatHistoryBtn.addEventListener('click', clearStatsHistory);\n"],"names":["$1f0dc3b9307be026$var$refs","gameMenuBtn","document","querySelector","cardGallery","timer","score","statsModal","statsContainer","statsTitle","closeStatsModalBtn","clearStatHistoryBtn","resetBtn","pauseBtn","startBtn","stopBtn","hintBtn","styleContainer","styleList","querySelectorAll","difficultyContainer","difficultyList","playBtn","continueBtn","cardLoadingAnimation","modal","loginBtn","submitBtn","closeModalBtn","loginForm","cardFlipSound","cardMatchSound","buttonClickSound","$1f0dc3b9307be026$var$startTime","$1f0dc3b9307be026$var$timerInterval","$1f0dc3b9307be026$var$NUMBER_OF_CARDS","$1f0dc3b9307be026$var$CHOSEN_STYLE","$1f0dc3b9307be026$var$HALF_SELECTED_CARD_COUNT","$1f0dc3b9307be026$var$MARVEL_RANDOM_OFFSET","$1f0dc3b9307be026$var$POKEMON_RANDOM_OFFSET","$1f0dc3b9307be026$var$clickedCards","$1f0dc3b9307be026$var$matchedCards","$1f0dc3b9307be026$var$elapsedTime","$1f0dc3b9307be026$var$isPaused","$1f0dc3b9307be026$var$zIndex","$1f0dc3b9307be026$var$firstMatchTime","$1f0dc3b9307be026$var$totalGameTime","$1f0dc3b9307be026$var$lastUsername","$1f0dc3b9307be026$var$getRandomNum","$1f0dc3b9307be026$var$difficulty","$1f0dc3b9307be026$var$score","async","$1f0dc3b9307be026$var$getCards","innerHTML","style","display","disabled","forEach","difficulty1","classList","add","classicCardsFetch","fetch","classicCardsDeck","json","classicCardsDraw","deck_id","$1f0dc3b9307be026$var$shuffleDrawCards","cards","marvelCardsFetch","data","results","pokemonCardsFetch","pokemonCardData","Promise","all","map","pokemonCard","url","error","console","log","numCards","selectedMarvelCards","filter","marvelCard","thumbnail","path","includes","extension","slice","duplicatedMarvelCards","card","drawnMarvelCards","concat","i","length","j","Math","floor","random","$1f0dc3b9307be026$var$renderCardmarkup","selectedClassicCards","duplicatedClassicCards","drawnClassicCards","selectedPokemonCards","duplicatedPokemonCards","drawnPokemonCards","cardGalleryMarkup","classicCard","image","join","name","sprites","other","dream_world","front_default","$1f0dc3b9307be026$var$cardMarkup","insertAdjacentHTML","$1f0dc3b9307be026$var$startTimer","$1f0dc3b9307be026$var$scoreKeeper","score1","textContent","$1f0dc3b9307be026$var$playBtnEnable","$1f0dc3b9307be026$var$endOfGame","$1f0dc3b9307be026$var$updateUserStats","$1f0dc3b9307be026$var$stopGame","markup","currentUserStats","JSON","parse","localStorage","getItem","fastestTimeToMatch","longestTimeToMatch","fastestTotalGameTime","longestTotalGameTime","highestScore","$1f0dc3b9307be026$var$markupStats","$1f0dc3b9307be026$var$renderStats","lastUsername1","difficulty2","firstMatchTime1","totalGameTime1","score2","userStats1","toFixed","key","value","Object","entries","setItem","stringify","$1f0dc3b9307be026$var$pauseGame","e","target","contains","play","cardList","clearInterval","Date","now","getTime","setInterval","minutes","seconds","$1f0dc3b9307be026$var$addLeaderingZero","currentTime","difficulty3","remove","difficulty4","setTimeout","difficulty5","difficulty6","time","addEventListener","cardClicked","parentNode","disabledCard","parentElement","getAttribute","cardContainer","closest","transform","push","firstCard","secondCard","firstCardImgSrc","secondCardImgSrc","timePassedInSeconds","$1f0dc3b9307be026$var$matchedCardSplits","cardBottomDelta","cardRightDelta","firstCardRect","getBoundingClientRect","secondCardRect","firstCardAbsoluteBottom","window","innerHeight","top","height","firstCardAbsoluteRight","innerWidth","left","width","secondCardAbsoluteBottom","secondCardAbsoluteRight","position","bottom","right","$1f0dc3b9307be026$var$matchedCardsAbsolutePosition","zIndex","$1f0dc3b9307be026$var$stackedMatchedCards","$1f0dc3b9307be026$var$doCardsMatch","nodeName","item","Number","dataset","closestLi","body","preventDefault","formData","FormData","username","fromEntries","uname","reset","clear"],"version":3,"file":"index.4d3fb1d3.js.map"}